#-*-coding: UTF-8-*-
# import subprocess
# import dmsh
# import optimesh
# import meshio
# import matplotlib.pyplot as pt
# import numpy as np


# p = subprocess.Popen("OpenSees.exe", stdin=subprocess.PIPE,
#                      stdout=subprocess.PIPE,
#                      stderr=subprocess.PIPE)
# p.stdin.write("source AnJiuCableStayedBridge.tcl\n".encode())
######################################################################################
# geo = dmsh.Difference(
#     dmsh.Polygon([[10, 10], [10, -10], [-10, -10],[-10,10]]),
#     dmsh.Polygon([[8, 8], [8, -8], [-8, -8],[-8,8]]),
# )
# points,elements = dmsh.generate(geo,1)
# pt.triplot(points[:, 0], points[:, 1], elements)
# pt.show()

################################################################
import pygmsh
import numpy as np

geom = pygmsh.built_in.Geometry()

# Draw a cross.
poly = geom.add_polygon([
    [ 0.0,  0.5, 0.0],
    [-0.1,  0.1, 0.0],
    [-0.5,  0.0, 0.0],
    [-0.1, -0.1, 0.0],
    [ 0.0, -0.5, 0.0],
    [ 0.1, -0.1, 0.0],
    [ 0.5,  0.0, 0.0],
    [ 0.1,  0.1, 0.0]
    ],
    lcar=0.05
)

axis = [0, 0, 1]

geom.extrude(
    poly,
    translation_axis=axis,
    rotation_axis=axis,
    point_on_axis=[0, 0, 0],
    angle=2.0 / 6.0 * np.pi
)

mesh = pygmsh.generate_mesh(geom)